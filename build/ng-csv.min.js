/*! ngcsv 03-12-2013 */
!function(){angular.module("ngCsv.config",[]).value("ngCsv.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngCsv.directives",[]),angular.module("ngCsv",["ngCsv.config","ngCsv.directives","ngSanitize"]),angular.module("ngCsv.directives",[]).directive("ngCsv",["$parse",function(){return{restrict:"AC",replace:!0,transclude:!0,scope:{data:"&ngCsv",filename:"@filename",header:"&csvHeader",separator:"@csvSeparator"},controller:["$scope","$element","$attrs","$transclude",function(a,b,c){a.csv="",a.$watch(a.data,function(b){a.buildCsv(b)},!0),a.buildCsv=function(b){var d="data:text/csv;charset=utf-8,";if(angular.isDefined(c.csvHeader)){var e,f,g=a.$eval(a.header);angular.isArray(g)?e=g:(e=[],angular.forEach(g,function(a){this.push(a)},e)),f=e.join(a.separator?a.separator:","),d+=f+"\n"}angular.forEach(b,function(c,e){var f,g;angular.isArray(c)?g=c:(g=[],angular.forEach(c,function(a){this.push(a)},g)),f=g.join(a.separator?a.separator:","),d+=e<b.length?f+"\n":f}),a.csv=encodeURI(d)},a.getFilename=function(){return a.filename?a.filename:"download.csv"}}],template:'<div class="csv-wrap"><div class="element" ng-transclude></div><a class="hidden-link" ng-hide="true" ng-href="{{ csv }}" download="{{ getFilename() }}"></a></div>',link:function(a,b){var c=angular.element(b.children()[0]),d=angular.element(b.children()[1]);c.bind("click",function(){d[0].click()})}}}])}(window,document);